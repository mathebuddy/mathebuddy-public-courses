Differentialrechnung
####################

---
EXERCISE Geradensteigung
@text
Sei $g$ eine Gerade im $\RR^2$ und $(x_0, y_0), (x_1, y_1)$ zwei verschiedene Punkte auf $g$. Dann ist die Steigung $m$ definiert durch:
(x) $m = (y_1-y_0)/(x_1-x_0) = (\Delta y)/(\Delta x)$
( ) $m = (x_1-x_0)/(y_1-y_0) = (\Delta x)/(\Delta y)$
---

---
EXERCISE Ableitungen
@code
let a = rand(3,8);
let f1(x) = a;
let f1d(x) = diff(f1, x);
@text
$f(x)=f1$
$f'(x)=$ #f1d
---

---
EXERCISE Ableitungen
@code
let a = rand(3,8);
let f1(x) = a * x;
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let a:b = range(3,8);
let f1(x) = a * x^b;
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let a:b:c = rand(3,8);
let f1(x) = a*x^2 + b*x + c;
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code 
let a:b = rand(3,8);
f1(x) := a / x;
f1_deriv(x) := diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let a:b:c:d = rand(2,4);
let f1(x) = (a*x^3 + b*x) * (c*x + d);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let f1(x) = exp(x);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let f1(x) = sin(x);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let f1(x) = cos(x);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let a = rand(3,8);
let f1(x) = a * x * exp(x);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let a:b = rand(3,8);
let f1(x) = a * exp(b*x);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let a:b:c = rand(3,8);
let f1(x) = sin(a * x^2 + b*x + c);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Ableitungen
@code
let a, b = rand(3,8);
let f1(x) = sin(a*x) + cos(b*x);
let f1_deriv(x) = diff(f1, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv
---

---
EXERCISE Höhere Ableitungen
@code
let a:b:c = rand(3,8);
let f1(x) = a*x^2 + b*x + c;
let f1_deriv_1(x) = diff(f1, x);
let f1_deriv_2(x) = diff(f1_deriv_1, x);
let f1_deriv_3(x) = diff(f1_deriv_2, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv_1
$ f''(x) = $ #f1_deriv_2
$ f'''(x) = $ #f1_deriv_3
---

---
EXERCISE Höhere Ableitungen
@code
let a:b = rand(3,8);
let f1(x) = sin(a * x + b);
let f1_deriv_1(x) = diff(f1, x);
let f1_deriv_2(x) = diff(f1_deriv_1, x);
let f1_deriv_3(x) = diff(f1_deriv_2, x);
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv_1
$ f''(x) = $ #f1_deriv_2
$ f'''(x) = $ #f1_deriv_3
---

---
EXERCISE Höhere Ableitungen
@code
let a in { 3, 4, ..., 8 }
let f1(x) = a * x * exp(x)
let f1_deriv_1(x) := diff(f1, x)
let f1_deriv_2(x) := diff(f1_deriv_1, x)
let f1_deriv_3(x) := diff(f1_deriv_2, x)
@text
$ f(x) = f1 $
$ f'(x) = $ #f1_deriv_1
$ f''(x) = $ #f1_deriv_2
$ f'''(x) = $ #f1_deriv_3
---



%%%


Stationäre Stellen

Sei $f$ eine auf $]a,b[$ zweimal differenzierbare Funktion und $x_0 in ]a,b[$ eine Stelle mit $f'(x_0)=0$.
Gilt $f''(x_0)<0$, so besitzt $f$ an der Stelle $x_0$:
(x) ein lokales __Maximum__.
( ) ein lokales __Minimum__.


%%%


Stationäre Stellen

    a, b in { 3, 4, 5 }
    f1(x) = a * x^2 + b
    f1_deriv_1(x) = diff(f1, x)
    f1_deriv_2(x) = diff(f1_deriv_1, x)
    s = 0

Sei $ f(x) = f1 $. Bestimme die stationäre Stelle: $ x_0 = #s $.
Dann besitzt $f$ in $x_0$:
( ) ein lokales Maximum
(x) ein lokales Minimum


%%%


Krümmung

Sei $f$ eine auf $[a,b]$ stetige und auf $]a,b[$ zweimal differenzierbare Funktion.
Gilt $f''(x)>0$ für alle $x in ]a,b[$, so ist $f$ auf dem Intervall $]a,b[$
(x) __linksgekrümmt oder konvex__.
( ) __rechtsgekrümmt oder konkav__.


%%%


Taylorpolynom

    f(x) := exp(x)
    x0 := 0
    f1(x) := diff(f, x)
    f2(x) := diff(f1, x)
    p0(x) := f(x0) / 0! * (x - x0)^0
    p1(x) := f1(x0) / 1! * (x - x0)^1
    p2(x) := f2(x0) / 2! * (x - x0)^2

Bestimme das zweite Taylorpolynom $p_2(x) = sum_(k=0)^2 ( "f"^(k)(x) ) / ( k ) (x-x_0)^k $ für $"f"(x)=f$ und $x_0=0$:
* $ p_0(x) = #p0 $
* $ p_1(x) = #p1 $
* $ p_2(x) = #p2 $


%%%


Taylorpolynom

    f(x) := sin(x)
    x0 := 0
    f1(x) := diff(f, x)
    f2(x) := diff(f1, x)
    f3(x) := diff(f2, x)
    p0(x) := f(x0) / 0! * (x - x0)^0
    p1(x) := f1(x0) / 1! * (x - x0)^1
    p2(x) := f2(x0) / 2! * (x - x0)^2
    p3(x) := f3(x0) / 3! * (x - x0)^3

Bestimme das dritte Taylorpolynom $p_3(x) = sum_(k=0)^3 ( "f"^(k)(x) ) / ( k ) (x-x_0)^k $ für $"f"(x)=f$ und $x_0=0$:
* $ p_0(x) = #p0 $
* $ p_1(x) = #p1 $
* $ p_2(x) = #p2 $
* $ p_3(x) = #p3 $


%%%


Taylorpolynom

    f(x) := cos(x)
    x0 := 0
    f1(x) := diff(f, x)
    f2(x) := diff(f1, x)
    f3(x) := diff(f2, x)
    p0(x) := f(x0) / 0! * (x - x0)^0
    p1(x) := f1(x0) / 1! * (x - x0)^1
    p2(x) := f2(x0) / 2! * (x - x0)^2
    p3(x) := f3(x0) / 3! * (x - x0)^3

Bestimme das dritte Taylorpolynom $p_3(x) = sum_(k=0)^3 ( "f"^(k)(x) ) / ( k ) (x-x_0)^k $ für $"f"(x)=f$ und $x_0=0$:
* $ p_0(x) = #p0 $
* $ p_1(x) = #p1 $
* $ p_2(x) = #p2 $
* $ p_3(x) = #p3 $
